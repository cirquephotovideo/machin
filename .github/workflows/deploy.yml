name: Deploy Next.js Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/ecommerce-dashboard:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/ecommerce-dashboard:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/ecommerce-dashboard:buildcache,mode=max

    - name: Deploy to production
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      run: |
        echo "$DEPLOY_KEY" > deploy_key
        chmod 600 deploy_key
        ssh -i deploy_key -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "
          docker pull ${{ secrets.DOCKER_USERNAME }}/ecommerce-dashboard:latest &&
          docker stop ecommerce-dashboard || true &&
          docker rm ecommerce-dashboard || true &&
          docker run -d --name ecommerce-dashboard \
            -p 2710:2710 \
            --restart unless-stopped \
            ${{ secrets.DOCKER_USERNAME }}/ecommerce-dashboard:latest
        "
